type UserNotification @model
@auth(rules: [{allow: owner }])
@key(name: "byUsername", fields: ["username"], queryField: "notificationByUser") {
  id: ID!
  title: String!
  subtitle: String
  content: String!
  link: AWSURL!
  username: String!
  status: Notification_Status
}

type AdminNotification @model
@auth(rules: [{allow: owner }]) {
  id: ID!
  title: String!
  subtitle: String
  content: String!
  link: AWSURL!
  status: Notification_Status
}

type Book @model
@searchable(queries: { search: "searchBook" })
@auth(rules: [{allow: owner }]) {
  id: ID!
  title: String!
  subject: String!
  publisher: String!
  language: String!
  edition: String!
  copies_present: Int
  copies_issued: Int
  BookItems: [BookItem] @connection(keyName: "byBook", fields: ["id"])
  Authors: [BookAuthor] @connection(keyName: "byBook", fields: ["id"])
}

type BookItem @model
@auth(rules: [{allow: owner }])
@key(name: "byRack", fields: ["rackID"])
@key(name: "byBook", fields: ["bookID"]) {
  id: ID!
  status: Book_Status!
  Transactions: [Transaction] @connection(keyName: "byBookItem", fields: ["id"])
  rackID: ID!
  bookID: ID!
}

type Rack @model
@searchable(queries: { search: "searchRack" })
@auth(rules: [{allow: owner }]) {
  id: ID!
  name: String!
  BookItems: [BookItem] @connection(keyName: "byRack", fields: ["id"])
}

type Author @model
@searchable(queries: { search: "searchAuthor" })
@auth(rules: [{allow: owner }]) {
  id: ID!
  name: String
  books: [BookAuthor] @connection(keyName: "byAuthor", fields: ["id"])
}

type Barcode @model
@auth(rules: [{allow: owner }]) {
  id: ID!
  status: Barcode_Status!
  bookItemID: ID
  book: BookItem @connection(fields: ["bookItemID"])
}

type Transaction @model
@auth(rules: [{allow: owner }])
@key(name: "byUsername", fields: ["Username"],  queryField: "transactionByUser")
@key(name: "byBookItem", fields: ["bookitemID"]) {
  id: ID!
  Username: String!
  due_date: AWSDate!
  fine: Int
  status: Transaction_Status!
  bookitemID: ID!
}

type BookAuthor @model
@auth(rules: [{allow: owner }])
@key(name: "byBook", fields: ["bookID", "authorID"])
@key(name: "byAuthor", fields: ["authorID", "bookID"]) {
  id: ID!
  bookID: ID!
  authorID: ID!
  book: Book! @connection(fields: ["bookID"])
  author: Author! @connection(fields: ["authorID"])
}

enum Book_Status {
  NOTISSUED
  ISSUED
  LOST
}

enum Barcode_Status {
  UNUSED
  USED
}

enum Notification_Status {
  UNREAD
  READ
}

enum Transaction_Status {
  ISSUED
  RETURNED
}
 